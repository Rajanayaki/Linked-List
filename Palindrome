class node:
  
  def  __init__(self,data):
    self.data=data
    self.next=None
class linkedlist:
 
 def __init__(self):
    self.head=None
  
  def push(self,data):
    newnode=node(data)
    if self.head is None:
      self.head=newnode
    else:
      temp=self.head
      while(temp.next!=None):
        temp=temp.next
      temp.next=newnode

  def palindrome(self):
    start=end=self.head
    while(start is not None and end is not None):
      if start.data==end.data:
        start=start.next
        end=end.next
      else:
        print("no")
        exit()
    
  def reverselist(self):
    revhead=None
    curr=self.head
    while(curr!=None):
      next=curr.next
      curr.next=revhead
      revhead=curr
      curr=next
    self.head=revhead
    
  def printlist(self):
    temp=self.head
    while(temp.next!=None):
      print(temp.data,end=" ")
      temp=temp.next
    print(temp.data)
    
ll=linkedlist()
size=int(input())
elements=list(input().split())
for i in range(size):
  ll.push(elements[i])
ll.reverselist()
print("yes")
